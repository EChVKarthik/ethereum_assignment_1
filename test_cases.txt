Account 1: 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4
Test name: Creating new order of 1000 
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome: On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 1000
		vidd: 199
		
		quantity
		uint256: 1000

		requestPayment
		_msg: 5000

		pay
		string: 5000
		
		ether: 99.999999999994334696 ether
		


Result: Pass

Account 2: 0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2
Test name: Creating new order of 200
Test Description:User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 200
		vidd: 199
		
		quantity
		uint256: 200

		requestPayment
		_msg: 1230

		pay
		string: 1230
		
		ether: 99.999999999999566293 ether
Result: Pass

Account 3: 0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db
Test name: Creating new order of 100
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 100
		vidd: 199
		
		quantity
		uint256: 100

		requestPayment
		_msg: 2000

		pay
		string: 2000
		
		ether: 99.9999999999962367343 ether
Result: Pass

Account 4: 0x78731D3Ca6b7E34aC0F824c42a7cC18A495cabaB
Test name: Creating new order of 9000
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 9000
		vidd: 199
		
		quantity
		uint256: 9000

		requestPayment
		_msg: 2000

		pay
		string: 2000
		
		ether: 99.9999999999991339125 ether
Result: Pass

Account 5: 0x617F2E2fD72FD9D5503197092aC168c91465E7f2
Test name: Creating new order of 8275
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 8275
		vidd: 199
		
		quantity
		uint256: 8275

		requestPayment
		_msg: 8989

		pay
		string: 8989
		
		ether: 99.9999999999913655916 ether
Result: Pass

Account 6: 0x17F6AD8Ef982297579C203069C1DbfFE4348c372
Test name: Creating new order of 900
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 900
		vidd: 199
		
		quantity
		uint256: 900

		requestPayment
		_msg: 5000

		pay
		string: 5000
		
		ether: 99.9999999999924335451 ether
Result: Pass

Account 7: 0x5c6B0f7Bf3E7ce046039Bd8FABdfD3f9F5021678
Test name: Creating new order of 500
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 500
		vidd: 199
		
		quantity
		uint256: 500

		requestPayment
		_msg: 200

		pay
		string: 200
		
		ether: 99.9999999999963535493 ether
Result: Pass

Account 8: 0x03C6FcED478cBbC9a4FAB34eF9f40767739D1Ff7
Test name: Creating new order of 7000
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 7000
		vidd: 199
		
		quantity
		uint256: 7000

		requestPayment
		_msg: 4000

		pay
		string: 4000
		
		ether: 99.9999999999994563551 ether
Result: Pass

Account 9: 0x1aE0EA34a72D944a8C7603FfB3eC30a6669E454C
Test name: Creating new order of 3200
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 3200
		vidd: 199
		
		quantity
		uint256: 3200

		requestPayment
		_msg: 200

		pay
		string: 200
		
		ether: 99.9999999999999134251 ether
Result: Pass

Account 10: 0x0A098Eda01Ce92ff4A4CCb7A4fFFb5A43EBC70DC
Test name: Creating new order of 2500
Test Description: User calls the acceptQuantity function and enters the beach_id 
		and quantity.
Desired outcome:On clicking the quantity function we able to see the quantity
		 and then we will click quantiy function to verfiy the quantiy
		 on verifying the requestPayment function is used in order to pay.
		 if we see the pay successful you need to click on the pay function.
Actual outcome:
		acceptQuantity
		cvalue: 2500
		vidd: 199
		
		quantity
		uint256: 2500

		requestPayment
		_msg: 4500

		pay
		string: 4500
		
		ether: 99.9999999999994623326 ether
Result: Pass